services:
  api:
    build:
      context: .
      dockerfile: api/Dockerfile
    env_file: .env
    environment:
      SIM_API_URL: "http://api:8000/run_sim" # override for in-cluster calls
      FRONTEND_ORIGIN: "http://localhost:3000"
    ports:
      - "8000:8000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock  # Docker socket for MCP Gateway
      - ./reports:/app/reports  # Shared reports directory
      - ./artifacts:/app/artifacts  # Shared artifacts directory
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/healthz"]
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 5s

  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    environment:
      NEXT_PUBLIC_API_BASE: "http://localhost:8000"
    ports:
      - "3000:3000"
    depends_on:
      api:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 10s

  # MCP Gateway - Ephemeral reporter service
  reporter:
    image: node:20-bullseye
    working_dir: /app
    volumes:
      - ./:/app
      - ./reports:/app/reports
    command: ["node", "scripts/reporter.mjs"]
    environment:
      - API_BASE_URL=http://api:8000
    profiles:
      - mcp
    depends_on:
      api:
        condition: service_healthy

  # MCP Gateway - High accuracy burst simulation
  sim-burst:
    image: python:3.11-slim
    working_dir: /app
    volumes:
      - ./:/app
      - ./artifacts:/app/artifacts
    command: ["python", "scripts/burst_sim.py"]
    environment:
      - API_BASE_URL=http://api:8000
    profiles:
      - mcp
    depends_on:
      api:
        condition: service_healthy
